### 
### Makefile for libocl
###

CFLAGS += @CFLAGS@

ifneq (@MAKE@,)
MAKE = @MAKE@
endif

prefix=@prefix@
exec_prefix=@exec_prefix@

### this useless define is needed to silence useless autoconf warning
datarootdir=@datarootdir@

LIBELF_INC=@LIBELF_INC@
LIBELF_LIB=@LIBELF_LIB@

LIBEVENT_INC=@LIBEVENT_INC@

### set custom path for ICD files
ifneq (@OPENCL_ICD_PATH@,)
OPENCL_ICD_PATH=@OPENCL_ICD_PATH@
else
OPENCL_ICD_PATH=@sysconfdir@/OpenCL/vendors/
endif

#DEFS += -DOCL_DEBUG 
#DEFS += -DOCL_WARN

#DEFS += -DENABLE_PRINTCL

#DEFS += -DUSE_FAST_SETJMP	# ONLY USE THIS IF YOU KNOW WHAT YOU ARE DOING

### select default install paths 
INSTALL_BIN_DIR=@bindir@
INSTALL_LIB_DIR=@libdir@
INSTALL_INCLUDE_DIR=@includedir@
INSTALL_MAN_DIR=@mandir@

############################################################################
##### DO NOT MODIFY BELOW THIS LINE UNLESS YOU KNOW WHAT YOU ARE DOING #####
############################################################################

OBJS = libocl.o oclcall.o 

DEFS += -DINSTALL_LIB_DIR=\"$(INSTALL_LIB_DIR)\" 

DEFS += -DOPENCL_ICD_PATH=\"$(OPENCL_ICD_PATH)\"

#ifeq (@ENABLE_DEBUG_LIBS@,1)
#DEFS += -DOCL_DEBUG 
#endif

ifeq (@ENABLE_SILENT@,1)
DEFS += -DENABLE_SILENT
endif
ifneq (@MAX_CLMESG_LEVEL@,)
DEFS += -DMAX_CLMESG_LEVEL=@MAX_CLMESG_LEVEL@
endif
ifneq (@DEFAULT_CLMESG_LEVEL@,)
DEFS += -DDEFAULT_CLMESG_LEVEL=@DEFAULT_CLMESG_LEVEL@
endif

ifeq (@ENABLE_LIBOCL_HOOK@,1)
DEFS += -DENABLE_LIBOCL_HOOK
OBJS += oclcall_hook.o
endif

VAR_CLPROC_PATH=@localstatedir@/clproc

######################################################################

TOPDIR ?= ../../

INCS += -I. -I$(TOPDIR)/include  -I../libclrpc
INCS += -I@LIBEVENT_PATH@/include
INCS += $(LIBELF_INC)

 

LIBS += $(LIBELF_LIB)

#LIBS += -lfl  -lpthread -lrt

ifeq (freebsd,$(patsubst freebsd%,freebsd,@build_os@))
LIBS += -lc 
else
LIBS += -ldl 
endif

INCS += -I@LIBCONFIG_PATH@/include 
LIBS += -L@LIBCONFIG_PATH@/lib -lconfig

#LIBS += -L../libclrpc -lclrpc

#OBJS_D = $(subst .o,_d.o,$(OBJS))

DEFS += \
	-DINSTALL_BIN_DIR=\"$(INSTALL_BIN_DIR)\" \
	-DINSTALL_LIB_DIR=\"$(INSTALL_LIB_DIR)\" \
	-DINSTALL_INCLUDE_DIR=\"$(INSTALL_INCLUDE_DIR)\" 

DEFS += -DVAR_CLPROC_PATH=\"$(VAR_CLPROC_PATH)\"

#CFLAGS += -O1 -fPIC -fbounds-check -g
CFLAGS += -O1 -fPIC 
CFLAGS_VCORE_RT = -O1 -fPIC -funroll-loops -fstrict-aliasing

#ifeq (@ENABLE_MIC_CROSS_COMPILE@,1)
ifeq (@host@,k1om-unknown-linux-gnu)
CFLAGS += -mmic
endif

TARGET = libocl.so libocl.a
#ifeq (@ENABLE_DEBUG_LIBS@,1)
#TARGET += libocl_d.so
#endif

INSTALL_LIBS = libocl.so libocl.a

all: $(TARGET) 

.PHONY: clean install uninstall

.SUFFIXES:
.SUFFIXES: .l .y .S .s .c .o

.c.o:
	$(CC) $(CFLAGS) $(DEFS) $(INCS) -c $<

.s.o:
	$(CC) $(CFLAGS) $(DEFS) $(INCS) -c $<

.S.o:
	$(CC) $(CFLAGS) $(DEFS) $(INCS) -c $<

#%_d.o:
#	$(CC) $(CFLAGS) $(DEFS) -DOCL_DEBUG $(INCS) -c $*.c -o $*_d.o

oclcall.o: oclcall.master
	perl gen_oclcall.pl
	$(CC) $(CFLAGS) $(DEFS) $(INCS) -c oclcall.c

oclcall_hook.o: oclcall.master
	perl gen_oclcall_hook.pl
	$(CC) $(CFLAGS) $(DEFS) $(INCS) -c oclcall_hook.c

libocl.so: oclcall.o $(OBJS) 
	$(CC) $(CFLAGS) $(INCS) \
		-shared -Wl,-soname,libocl.so -o libocl.so  $(OBJS) $(LIBS)

libocl.a: oclcall.o $(OBJS)
	ar rcv libocl.a  $(OBJS)

#libocl_d.so: $(OBJS_D) $(RT_OBJS)
#	$(CC) $(CFLAGS) $(INCS) \
#		-shared -Wl,-soname,libocl_d.so -o libocl_d.so  $(OBJS_D) $(LIBS)

debug:
	export ENABLE_DEBUG=1
	$(MAKE) -f Makefile all


install: 
	test -d $(DESTDIR)$(INSTALL_INCLUDE_DIR) || install -m 755 -d $(DESTDIR)$(INSTALL_INCLUDE_DIR)
	test -d $(DESTDIR)$(INSTALL_LIB_DIR) || install -m 755 -d $(DESTDIR)$(INSTALL_LIB_DIR)
	test -d $(DESTDIR)$(INSTALL_BIN_DIR) || install -m 755 -d $(DESTDIR)$(INSTALL_BIN_DIR)
	install -m 755 libocl.so $(DESTDIR)$(INSTALL_LIB_DIR)
	install -m 755 $(INSTALL_LIBS) $(DESTDIR)$(INSTALL_LIB_DIR)
#	install -m 755 libocl_d.so $(DESTDIR)$(INSTALL_LIB_DIR)
#	ln -sf $(INSTALL_LIB_DIR)/libocl.so $(DESTDIR)$(INSTALL_LIB_DIR)/libOpenCL.so
#ifeq ($(ENABLE_DEBUG_LIBCOPRTHR),1)
#	ln -sf $(INSTALL_LIB_DIR)/libocl_d.so $(DESTDIR)$(INSTALL_LIB_DIR)/libOpenCL_d.so
#endif
ifneq (@ENABLE_ANDROID_CROSS_COMPILE@,1)
	test -d $(DESTDIR)$(VAR_CLPROC_PATH) || install -m 777 -d $(DESTDIR)$(VAR_CLPROC_PATH)
endif

uninstall: 
#	rm -f $(DESTDIR)$(INSTALL_LIB_DIR)/libocl.so $(DESTDIR)$(INSTALL_LIB_DIR)/libocl_d.so
#	rm -f $(DESTDIR)$(INSTALL_LIB_DIR)/libOpenCL.so $(DESTDIR)$(INSTALL_LIB_DIR)/libOpenCL_d.so
#	rm -f $(DESTDIR)$(INSTALL_LIB_DIR)/libocl.so
	rm -f $(addprefix $(DESTDIR)$(INSTALL_LIB_DIR)/,$(INSTALL_LIBS))
#	rm -f $(DESTDIR)$(INSTALL_LIB_DIR)/libOpenCL.so

clean:
	rm -f *.o *.so *.a
	rm -f oclcall.h oclcall.c

distclean: clean


