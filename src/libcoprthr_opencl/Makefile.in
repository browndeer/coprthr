### 
### Makefile for libcoprthr
###

CFLAGS += @CFLAGS@

ifneq (@MAKE@,)
MAKE = @MAKE@
endif

prefix=@prefix@
exec_prefix=@exec_prefix@

### this useless define is needed to silence useless autoconf warning
datarootdir=@datarootdir@

LIBELF_INC=@LIBELF_INC@
LIBELF_LIB=@LIBELF_LIB@

### select default install paths 
INSTALL_BIN_DIR=@bindir@
INSTALL_LIB_DIR=@libdir@
INSTALL_INCLUDE_DIR=@includedir@
INSTALL_MAN_DIR=@mandir@

### set custom path for ICD files
ifneq (@OPENCL_ICD_PATH@,)
OPENCL_ICD_PATH=@OPENCL_ICD_PATH@
else
OPENCL_ICD_PATH=@sysconfdir@/OpenCL/vendors/
endif

ifeq (@ENABLE_SILENT@,1)
DEFS += -DENABLE_SILENT
endif
ifneq (@MAX_CLMESG_LEVEL@,)
DEFS += -DMAX_CLMESG_LEVEL=@MAX_CLMESG_LEVEL@
endif
ifneq (@DEFAULT_CLMESG_LEVEL@,)
DEFS += -DDEFAULT_CLMESG_LEVEL=@DEFAULT_CLMESG_LEVEL@
endif

############################################################################
##### DO NOT MODIFY BELOW THIS LINE UNLESS YOU KNOW WHAT YOU ARE DOING #####
############################################################################

XCL_OBJS = ocl_platform.o ocl_device.o ocl_context.o ocl_command_queue.o \
	ocl_enqueue.o ocl_event.o ocl_program.o ocl_kernel.o ocl_memobj.o \
	ocl_flush.o xcl_icd.o ocl_sampler.o ocl_profile.o ocl_clgl.o icd.o

IMP_OBJS = device.o device_x86_64.o \
	command_queue.o event.o \
	program.o kernel.o memobj.o \
	cmdsched.o cmdcall.o \
	watermark.o \
	cmdcall_x86_64_sl.o sl_engine.o 

INSTALL_HDRS = sl_engine.h ser_engine.h workp.h opencl_lift.h coprthr.h

INSTALL_LIBS = libcoprthr_opencl.so libcoprthr_opencl.a


DEFS += -DINSTALL_LIB_DIR=\"$(INSTALL_LIB_DIR)\" 
DEFS += -DENABLE_NCPU

DEFS += -DLIBCOPRTHR_CC=\"@LIBCOPRTHR_CC@\"
DEFS += -DLIBCOPRTHR_CXX=\"@LIBCOPRTHR_CXX@\"

######################################################################

TOPDIR ?= ../../

SCRIPTS = ../scripts/
OCLCALL_MASTER = ../libocl/oclcall.master

INCS += -I. -I$(TOPDIR)/include -I$(TOPDIR)/src/libcoprthrcc
INCS += -I../libcoprthr

INCS += $(LIBELF_INC)

LIBS += $(LIBELF_LIB)

ifneq (@host_os@,linux-androideabi)
LIBS += -lpthread -lrt
endif

ifeq (freebsd,$(patsubst freebsd%,freebsd,@build_os@))
LIBS += -lc 
else
LIBS += -ldl 
endif

OBJS = $(XCL_OBJS) $(IMP_OBJS)

DEFS += \
	-DINSTALL_BIN_DIR=\"$(INSTALL_BIN_DIR)\" \
	-DINSTALL_LIB_DIR=\"$(INSTALL_LIB_DIR)\" \
	-DINSTALL_INCLUDE_DIR=\"$(INSTALL_INCLUDE_DIR)\" 

#DISABLE_UBUNTU_FLAGS = -U_FORTIFY_SOURCE -fno-stack-protector \
#   -Wno-unused-result -Wno-format-security -Wno-format
DISABLE_UBUNTU_FLAGS = -U_FORTIFY_SOURCE -fno-stack-protector \
   -Wno-format-security -Wno-format

CFLAGS += -O2 -fPIC $(DISABLE_UBUNTU_FLAGS)
CFLAGS_VCORE += -O0 -fPIC 
CFLAGS_VCORE_RT = -O0 -fPIC -funroll-loops -fstrict-aliasing

ifeq (arm,$(patsubst arm%,arm,@build_cpu@))
CFLAGS += -marm
CFLAGS_VCORE += -marm
endif

#ifeq (@ENABLE_MIC_CROSS_COMPILE@,1)
ifeq (@build@,mic-unknown-linux-gnu)
CFLAGS += -mmic
endif


#YACC = yacc
YACC = bison
YACCCFLAGS =  -y -v 

LEX = flex
LEXFLAGS = 

XCLNM_YYPREFIX = __xclnm_

#TARGET = libcoprthr.so 
TARGET += libcoprthr_opencl.so libcoprthr_opencl.a
TARGET += icd.c

#VPATH = ../libcoprthr_opencl/

all: $(TARGET) 

.PHONY: clean install uninstall

.SUFFIXES:
.SUFFIXES: .l .y .S .s .c .o


.c.o:
	$(CC) $(CFLAGS) $(DEFS) $(INCS) -c $<

.s.o:
	$(CC) $(CFLAGS) $(DEFS) $(INCS) -c $<

.S.o:
	$(CC) $(CFLAGS) $(DEFS) $(INCS) -c $<

icd.c:
	perl $(SCRIPTS)/gen_ocl_call_vector.pl __icd_call_vector _ \
		< $(OCLCALL_MASTER) > icd.c

#libcoprthr.so: $(OBJS) $(RT_OBJS)
#	$(CC) $(CFLAGS) $(INCS) \
#		-shared -Wl,-soname,libcoprthr.so -o libcoprthr.so  $(OBJS) $(LIBS)

#libcoprthr.so: $(IMP_OBJS) 
#	$(CC) $(CFLAGS) $(INCS) \
#		-shared -Wl,-soname,libcoprthr.so -o libcoprthr.so  $(IMP_OBJS) $(LIBS)

libcoprthr_opencl.so: $(XCL_OBJS) 
	$(CC) $(CFLAGS) $(INCS) \
		-shared -Wl,-soname,libcoprthr_opencl.so -o libcoprthr_opencl.so  $(XCL_OBJS) $(LIBS) -L../libcoprthr -lcoprthr

libcoprthr_opencl.a: $(XCL_OBJS)
	ar rcv libcoprthr_opencl.a $(XCL_OBJS)

#debug:
#	export ENABLE_DEBUG=1
#	$(MAKE) -f Makefile all


install: 
	test -d $(DESTDIR)$(INSTALL_INCLUDE_DIR) || install -m 755 -d $(DESTDIR)$(INSTALL_INCLUDE_DIR)
	test -d $(DESTDIR)$(INSTALL_LIB_DIR) || install -m 755 -d $(DESTDIR)$(INSTALL_LIB_DIR)
	test -d $(DESTDIR)$(INSTALL_BIN_DIR) || install -m 755 -d $(DESTDIR)$(INSTALL_BIN_DIR)
#	install -m 755 libcoprthr.so $(DESTDIR)$(INSTALL_LIB_DIR)
#	install -m 755 libcoprthr_opencl.so $(DESTDIR)$(INSTALL_LIB_DIR)
	install -m 755 $(INSTALL_LIBS) $(DESTDIR)$(INSTALL_LIB_DIR)
#	install -m 755 sl_engine.h $(DESTDIR)$(INSTALL_INCLUDE_DIR)
#	install -m 755 ser_engine.h $(DESTDIR)$(INSTALL_INCLUDE_DIR)
#	install -m 755 workp.h $(DESTDIR)$(INSTALL_INCLUDE_DIR)
#	install -m 755 opencl_lift.h $(DESTDIR)$(INSTALL_INCLUDE_DIR)/opencl_lift.h
	test -d $(DESTDIR)$(OPENCL_ICD_PATH) || install -m 755 -d $(DESTDIR)$(OPENCL_ICD_PATH)
	echo $(INSTALL_LIB_DIR)/libcoprthr_opencl.so > $(DESTDIR)$(OPENCL_ICD_PATH)/coprthr.icd

uninstall: 
#	rm -f $(DESTDIR)$(INSTALL_LIB_DIR)/libcoprthr_opencl.so
	rm -f $(addprefix $(DESTDIR)$(INSTALL_LIB_DIR)/,$(INSTALL_LIBS))
	rm -f $(addprefix $(DESTDIR)$(INSTALL_LIB_DIR)/,$(RT_OBJS))
	rm -f $(addprefix $(DESTDIR)$(INSTALL_INCLUDE_DIR)/,sl_engine.h)
	rm -f $(addprefix $(DESTDIR)$(INSTALL_INCLUDE_DIR)/,ser_engine.h)
	rm -f $(addprefix $(DESTDIR)$(INSTALL_INCLUDE_DIR)/,workp.h)
	rm -f $(addprefix $(DESTDIR)$(INSTALL_INCLUDE_DIR)/,opencl_lift.h)
	rm -f $(DESTDIR)$(OPENCL_ICD_PATH)/coprthr.icd

clean:
	rm -f *.o *.so
	rm -f $(TARGET)

distclean: clean


